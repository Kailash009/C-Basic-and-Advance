Jagged Array:-
-----------------------------
>> It is also known as 'Array of Arrays'.
>> When we want to store different size of array and merge them to get a single sorted array then we use the concept of Jagged Array.
-------------------------------------------------------------------------------------------------------------------------------- 
using System;
namespace Batch3PMAsgar
{
    class Demo
    {
        static void Main()
        {
            int [][]a= new int[3][];  // Jagged Array
            a[0] = new int[3] { 12, 54, 43 };
            a[1] = new int[2] { 123, 567 };
            a[2] = new int[5] { 23, 76, 43, 21, 21 };
            foreach (int []arr in a)
            {
                foreach (int res in arr)
                {
                    Console.Write(res+"\t");
                }
                Console.WriteLine();
            }
               
        }
    }
}
-----------------------------------------------------------------------------------------------------------
String:-
----------------------------------
>> It is immutable (which we can't modify) entity.
>> string is represented by double quotes.
>> it contains more than one character.
>> Performance is slow.
>> In string when you assign new value into the same variable then it creates a separate memory to store that value.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
using System;
namespace Batch3PMAsgar
{
    class Demo
    {
        static void Main()
        {
            string str = "Hello\n";
            str = str + "I am Asgar\n";
            str = str + "I worked for Infosys";
            Console.WriteLine(str);
        }
    }
}
---------------------------------------------------------------------------------------------------------------
StringBuilder:- using System.Text;
--------------------------------------------------
>> It is Mutable. (which we can modify).
>> Peformance high.
>> It doesn't create separate memory to store new value.
--------------------------------------------------------------------------------------------------------
using System;
using System.Text;

namespace Batch3PMAsgar
{
    class Demo
    {
        static void Main()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("Hello");
            sb.Append("I am asgar");
            sb.Append("I worked for infosys");
            Console.WriteLine(sb);
        }
    }
}
--------------------------------------------------------------------------------------------------------------
Assignment Question of String:-
----------------------------------------------------
1. wap to input two string and check string is equal or not.
2. wap to input a string and reverse them
3. wap to input string and find the length of the string.
4. wap to input string and check input string is Palindrome or not.
5. wap to input a string in lower case and convert it into uppercase and vice-versa.
------------------------------------------------------------------------------------------------------------------------------- 
Assembly:-
------------------------------
>> An assembly is basic building block of dot net framework.
>> It is collection of type and resources that are built to work together.
Types of Assembly:-
------------------------------------
There are two types of Assembly:-
-------------------------------------------------------------
1. Public Assembly or Shared Assembly.
>> which we can shared.
>> .dll (Dynamic Link Library).
-----------------------------------------------------------------
2. Private Assembly.
>> which we can't shared.
>> .exe (Executable file)  -> Desktop Application
-------------------------------------------------------------------------------------
How to create dll in c#:-
-----------------------------------------------------------
Here we use one template for creating dll -> 'Class Library'.
-----------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CheckAuthentication
{
    public class LoginManagement
    {
        public bool checkLogin(string username,string password) // Formal Parameter
        {
            if(username=="admin" && password=="12345")
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        public string showUser(string username)
        {
            return username;
        }
    }
}
-----------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using CheckAuthentication;
namespace WinLoginForm
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            if (txtUserName.Text == "" && txtPassword.Text == "")
            {
                MessageBox.Show("Plz Enter UserName and Password!!");
            }
            else
            {
                string u_name = txtUserName.Text;
                string u_paswd = txtPassword.Text;
                LoginManagement lm = new LoginManagement();
                bool b = lm.checkLogin(u_name, u_paswd); // Function Calling. Actual Paramter
                if (b == true)
                {
                    MessageBox.Show("Welcome!" + lm.showUser(u_name));
                }
                else
                {
                    MessageBox.Show("Incorrect UserName and Password!!");
                }
            }
        }

        private void btnClear_Click(object sender, EventArgs e)
        {
            txtUserName.Text = "";
            txtPassword.Text = "";
        }
    }
}
---------------------------------------------------------------------------------------------------------------------
Assignment Task:- Monday
-----------------------------------------------------
Create a dll that perform calculator - add,sub,mult,div,rem.
--------------------------------------------------------------------------------------------------------------
Oop's:-
-----------------------
>> It stands for Object Oriented Programming.
>> It is an approach to promote greater flexibility and maintainablity in programming.
-----------------------------------------------------------------------------------------------------------------------------------
Oop's Features:-
------------------------------
1. Class.
2. Object.
-----------------------------------
Pillars of OOp's:-
------------------------------------
3. Data Abstraction.
4. Encapsulation.
5. Inheritance.
6. Polymorphism.
---------------------------------------------------
TASK:-
----------------------
>> wap to make calculator using function -- switch.  -> 10 Min.
method must be parameterized and return value.
------------------------------------------------------------------------------------------
+ -> add
- -> sub
* -> mult
/ -> div
% -> rem
----------------------------------------------------------------------------------------








































































































