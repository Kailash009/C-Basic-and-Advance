Control Statements/Loop/Iterative Statements:-
-----------------------------------------------------
>> When a user want to print/display one statement several times then we use the concept of Loop.
>> Loop is used to perform iteration/repetition on a statement.
-------------------------------------------------------------------------
There are several types of Control Statements in C#:-
1. while.
2. do-while.
3. for.
4. foreach.
----------------------------------------------------------
1. While:-
>> It is also known as 'Entry controlled Loop'.
>> In while loop condition will be checked first and after that statement will be printed/executed.
Syntax:-
---------------
while(condition)
{
statement1;
inc/dec;
}
---------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int a = 1;
            while (a<=3) // 1<3 2<3 3<3 False
            {
                Console.WriteLine("Hello How Are you??");
                a++; // a=a+1
            }
        }
    }
}
----------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int ch = 4;
            while (ch != 4)
            {
                Console.WriteLine("Enjoy!!");
                ch++;
            }
            Console.WriteLine("End of Loop...");
        }
    }
}
------------------------------------------------------
do-while:-
-----------------
>> It is also known as 'Exit Controlled Loop'.
>> In do-while loop statement will be executed at once whether the condition is true or false.
>> In do-while loop statement must be executed at once.
-----------------------------------------
Syntax:-
--------------
do
{
statement;
inc/dec;
}
while(condition); // It must be terminated
------------------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int a = 1;
            do
            {
                Console.WriteLine(a); //1 2
                a++; // 2 3 
            }
            while (a != 3); // 2!=3 true  3!=3
        }
    }
}
--------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int a = 4;
            do
            {
                Console.WriteLine(a); // 4
                a++;  // 5
            }
            while (a<2); // 5<2 False
        }
    }
}
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int a = 1;
            do
            {
                Console.WriteLine(a); // 1 2
                a++;  // 2 3 
            }
            while (a<=10); // 2<=10 3<=10  10<=10  10<=11 False
        }
    }
}
-----------------------------------------------------
for:-
----------
>> It has three expression.
1. Initialization. -> 1 Time.
2. Condition.
3. Inc/Dec.
--------------------------------------
for(initialization;condition;inc/dec)
{
statements;
}
------------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            for(int i=1;i<=10;i++)
            {
                Console.WriteLine(i); // 1
            }
        }
    }
}
-----------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int i;
            for (i = 1; i <= 5; i++);
            {
                Console.WriteLine(i); //6
            }
        }
    }
}
--------------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            int i;
            for (i = 4; i!= 0; i--)
            {
                Console.WriteLine(i);
            }
        }
    }
}
--------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            string str = "Hello Programming How are you?";
            for(int i = 0; i < str.Length; i++) // 0<30 5<30
            {
                Console.WriteLine(str[i]); // str[0] -> H str[5] ->
                i += 4; // 0+4 = i=4   H r n w
            }
        }
    }
}
------------------------------------
ForEach:-
--------------
>> To iterate collection of items.
Syntax:-
------------------
foreach(data_type var_Name in collection)
{
// Statement
}
----------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            string str = "ROHIT";
            foreach(char ch in str)
            {
                Console.WriteLine(ch);
            }
        }
    }
}
--------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            string str = "ROHIT";
            char ch;
            for(int i=0;i<str.Length;i++) // 0<5 1<5  5<5
            {
                ch = str[i]; // ch=str[0] ch='R'
                Console.WriteLine(ch); // R
            }
        }
    }
}
-----------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            List<string> spt = new List<string> { "Cricket", "FootBall", "Tennis", "Volleyball", "Hockey", "Kabaddi", "Polo" };
            foreach (string sport in spt)
            {
                Console.WriteLine(sport);
            }
        }
    }
}
--------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            string[] courses = { "Java", "PHP", "Angular", "React", "AWS", "Dot Net", "SQL" };
            foreach (string course in courses)
            {
                Console.WriteLine(course);
            }
        }
    }
}
-------------------------------------------------
using System;
namespace Batch10AM21Aug
{
    class Demo
    {
        static void Main()
        {
            string[] courses = { "Java", "PHP", "Angular", "React", "AWS", "Dot Net", "SQL" };
            for (int i = 0; i < courses.Length; i++)
            {
                Console.WriteLine(courses[i]);
            }
        }
    }
}
----------------------------------------------------------
Assignment of Loop:-
-------------------------
1. wap to print 1 to 50 number using while,do-while,for.
2. wap to print 50 to 1 number using while,do-while,for.
3. wap to print even number between 1 to 100 using while,do-while and for.
4. wap to print odd number between 1 to 60 using while,do-while and for.
5. wap to input a number and find the sum and avg.
6. wap to input a number and print the table.
7. wap to input a number and find the factorial.
8. wap to input a number and find the fibonacci series.
9. wap to input a number and find the armstrong number or not.
10. wap to input a number and find number is prime or not.
11. wap to input a number and find the sum of its digit.
12. wap to input a number and reverse a number.
13. wap to input a number and check its palindrome or not.
14. wap to input a number and check its neon number or not.
15. wap to input a number and check its BUZZ number or not.
-------------------------------------------------------------------------
NESTED LOOP / Pattern Programming:-
---------------------------------------------



































































